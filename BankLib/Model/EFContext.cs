// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace BankLib.Model;

public partial class EFContext : DbContext
{
    public EFContext()
    {
    }

    public EFContext(DbContextOptions<EFContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Account> BankExampleWithEfAccounts { get; set; }

    public virtual DbSet<Address> BankExampleWithEfAddresses { get; set; }

    public virtual DbSet<City> BankExampleWithEfCities { get; set; }

    public virtual DbSet<Customer> BankExampleWithEfCustomers { get; set; }

    public virtual DbSet<Department> BankExampleWithEfDepartments { get; set; }

    public virtual DbSet<Employee> BankExampleWithEfEmployees { get; set; }

    public virtual DbSet<EmployeeLog> BankExampleWithEfEmployeeLogs { get; set; }

    public virtual DbSet<MainAccount> BankExampleWithEfMainAccounts { get; set; }

    public virtual DbSet<Position> BankExampleWithEfPositions { get; set; }

    public virtual DbSet<Transaction> BankExampleWithEfTransactions { get; set; }

    public virtual DbSet<ZipCodeTable> BankExampleWithEfZipCodeTables { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer(Secret.ConnectionString);

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Account>(entity =>
        {
            entity.HasKey(e => e.AccountId).HasName("PK__BankExam__B19E45E93CF5FAD5");

            entity.HasOne(d => d.MainAccount).WithMany(p => p.BankExampleWithEfAccounts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BankExamp__MainA__123EB7A3");
        });

        modelBuilder.Entity<Address>(entity =>
        {
            entity.HasKey(e => e.AddressId).HasName("PK__tmp_ms_x__03BDEBBAFB4D8059");

            entity.HasOne(d => d.City).WithMany(p => p.BankExampleWithEfAddresses)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BankExamp__City___7E37BEF6");
        });

        modelBuilder.Entity<City>(entity =>
        {
            entity.HasKey(e => e.CityId).HasName("PK__tmp_ms_x__DE9DE00032A0028A");

            entity.HasOne(d => d.ZipCode).WithMany(p => p.BankExampleWithEfCities)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BankExamp__ZipCo__7B5B524B");
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.CustomerId).HasName("PK__BankExam__8CB28699F1450C6D");

            entity.HasOne(d => d.Address).WithMany(p => p.BankExampleWithEfCustomers)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BankExamp__Addre__0E6E26BF");

            entity.HasOne(d => d.MainAccount).WithMany(p => p.BankExampleWithEfCustomers)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BankExamp__MainA__0F624AF8");
        });

        modelBuilder.Entity<Department>(entity =>
        {
            entity.HasKey(e => e.DepartmentId).HasName("PK__BankExam__151675F1CA97DF95");
        });

        modelBuilder.Entity<Employee>(entity =>
        {
            entity.HasKey(e => e.EmployeeId).HasName("PK__BankExam__781134A11EF0D7D3");

            entity.HasOne(d => d.Address).WithMany(p => p.BankExampleWithEfEmployees)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BankExamp__Addre__08B54D69");

            entity.HasOne(d => d.Department).WithMany(p => p.BankExampleWithEfEmployees)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BankExamp__Depar__0A9D95DB");

            entity.HasOne(d => d.MainAccount).WithMany(p => p.BankExampleWithEfEmployees)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BankExamp__MainA__0B91BA14");

            entity.HasOne(d => d.Position).WithMany(p => p.BankExampleWithEfEmployees)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BankExamp__Posit__09A971A2");
        });

        modelBuilder.Entity<EmployeeLog>(entity =>
        {
            entity.HasKey(e => e.LogId).HasName("PK__BankExam__2D26E78EB7D1A7D0");

            entity.HasOne(d => d.AffectedCustomer).WithMany(p => p.BankExampleWithEfEmployeeLogs).HasConstraintName("FK__BankExamp__Affec__1AD3FDA4");

            entity.HasOne(d => d.AffectedEmployee).WithMany(p => p.BankExampleWithEfEmployeeLogAffectedEmployees).HasConstraintName("FK__BankExamp__Affec__19DFD96B");

            entity.HasOne(d => d.ResponsibleEmployee).WithMany(p => p.BankExampleWithEfEmployeeLogResponsibleEmployees)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BankExamp__Respo__18EBB532");
        });

        modelBuilder.Entity<MainAccount>(entity =>
        {
            entity.HasKey(e => e.MainAccountId).HasName("PK__BankExam__38E33F988232B9AE");
        });

        modelBuilder.Entity<Position>(entity =>
        {
            entity.HasKey(e => e.PositionId).HasName("PK__BankExam__3C3EAE061E04BA6E");
        });

        modelBuilder.Entity<Transaction>(entity =>
        {
            entity.HasKey(e => e.TransactionId).HasName("PK__tmp_ms_x__9A8D5605345FB523");

            entity.HasOne(d => d.Account).WithMany(p => p.BankExampleWithEfTransactions)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BankExamp__Accou__1F98B2C1");

            entity.HasOne(d => d.Customer).WithMany(p => p.BankExampleWithEfTransactions).HasConstraintName("FK__BankExamp__Custo__1EA48E88");

            entity.HasOne(d => d.Employee).WithMany(p => p.BankExampleWithEfTransactions).HasConstraintName("FK__BankExamp__Emplo__1DB06A4F");
        });

        modelBuilder.Entity<ZipCodeTable>(entity =>
        {
            entity.HasKey(e => e.ZipCodeId).HasName("PK__tmp_ms_x__E1F64B02F027B620");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}